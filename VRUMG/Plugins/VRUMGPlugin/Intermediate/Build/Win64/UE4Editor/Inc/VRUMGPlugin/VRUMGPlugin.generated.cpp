// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Private/VRUMGPluginPrivatePCH.h"
#include "VRUMGPlugin.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCodeVRUMGPlugin() {}
	void UVRUMGPluginBPLibrary::StaticRegisterNativesUVRUMGPluginBPLibrary()
	{
	}
	IMPLEMENT_CLASS(UVRUMGPluginBPLibrary, 3391259060);
	void UVRWidgetComponent::StaticRegisterNativesUVRWidgetComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UVRWidgetComponent::StaticClass(), "EmulateActivateKeyDown",(Native)&UVRWidgetComponent::execEmulateActivateKeyDown);
		FNativeFunctionRegistrar::RegisterFunction(UVRWidgetComponent::StaticClass(), "EmulateActivateKeyUp",(Native)&UVRWidgetComponent::execEmulateActivateKeyUp);
		FNativeFunctionRegistrar::RegisterFunction(UVRWidgetComponent::StaticClass(), "EmulateTouchDown",(Native)&UVRWidgetComponent::execEmulateTouchDown);
		FNativeFunctionRegistrar::RegisterFunction(UVRWidgetComponent::StaticClass(), "EmulateTouchMove",(Native)&UVRWidgetComponent::execEmulateTouchMove);
		FNativeFunctionRegistrar::RegisterFunction(UVRWidgetComponent::StaticClass(), "EmulateTouchUp",(Native)&UVRWidgetComponent::execEmulateTouchUp);
		FNativeFunctionRegistrar::RegisterFunction(UVRWidgetComponent::StaticClass(), "GetLocalHit",(Native)&UVRWidgetComponent::execGetLocalHit);
		FNativeFunctionRegistrar::RegisterFunction(UVRWidgetComponent::StaticClass(), "SetCustomHit",(Native)&UVRWidgetComponent::execSetCustomHit);
	}
	IMPLEMENT_CLASS(UVRWidgetComponent, 3051830668);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintFunctionLibrary();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FHitResult();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector2D();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector();
	UMG_API class UClass* Z_Construct_UClass_UWidgetComponent();

	VRUMGPLUGIN_API class UClass* Z_Construct_UClass_UVRUMGPluginBPLibrary_NoRegister();
	VRUMGPLUGIN_API class UClass* Z_Construct_UClass_UVRUMGPluginBPLibrary();
	VRUMGPLUGIN_API class UFunction* Z_Construct_UFunction_UVRWidgetComponent_EmulateActivateKeyDown();
	VRUMGPLUGIN_API class UFunction* Z_Construct_UFunction_UVRWidgetComponent_EmulateActivateKeyUp();
	VRUMGPLUGIN_API class UFunction* Z_Construct_UFunction_UVRWidgetComponent_EmulateTouchDown();
	VRUMGPLUGIN_API class UFunction* Z_Construct_UFunction_UVRWidgetComponent_EmulateTouchMove();
	VRUMGPLUGIN_API class UFunction* Z_Construct_UFunction_UVRWidgetComponent_EmulateTouchUp();
	VRUMGPLUGIN_API class UFunction* Z_Construct_UFunction_UVRWidgetComponent_GetLocalHit();
	VRUMGPLUGIN_API class UFunction* Z_Construct_UFunction_UVRWidgetComponent_SetCustomHit();
	VRUMGPLUGIN_API class UClass* Z_Construct_UClass_UVRWidgetComponent_NoRegister();
	VRUMGPLUGIN_API class UClass* Z_Construct_UClass_UVRWidgetComponent();
	VRUMGPLUGIN_API class UPackage* Z_Construct_UPackage__Script_VRUMGPlugin();
	UClass* Z_Construct_UClass_UVRUMGPluginBPLibrary_NoRegister()
	{
		return UVRUMGPluginBPLibrary::StaticClass();
	}
	UClass* Z_Construct_UClass_UVRUMGPluginBPLibrary()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlueprintFunctionLibrary();
			Z_Construct_UPackage__Script_VRUMGPlugin();
			OuterClass = UVRUMGPluginBPLibrary::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("VRUMGPluginBPLibrary.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/VRUMGPluginBPLibrary.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("*      Function library class.\n*      Each function in it is expected to be static and represents blueprint node that can be called in any blueprint.\n*\n*      When declaring function you can define metadata for the node. Key function specifiers will be BlueprintPure and BlueprintCallable.\n*      BlueprintPure - means the function does not affect the owning object in any way and thus creates a node without Exec pins.\n*      BlueprintCallable - makes a function which can be executed in Blueprints - Thus it has Exec pins.\n*      DisplayName - full name of the node, shown when you mouse over the node and in the blueprint drop down menu.\n*                              Its lets you name the node using characters not allowed in C++ function names.\n*      CompactNodeTitle - the word(s) that appear on the node.\n*      Keywords -      the list of keywords that helps you to find node when you search for it using Blueprint drop-down menu.\n*                              Good example is \"Print String\" node which you can find also by using keyword \"log\".\n*      Category -      the category your node will be under in the Blueprint drop-down menu.\n*\n*      For more info on custom blueprint nodes visit documentation:\n*      https://wiki.unrealengine.com/Custom_Blueprint_Node_Creation"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UVRUMGPluginBPLibrary(Z_Construct_UClass_UVRUMGPluginBPLibrary, &UVRUMGPluginBPLibrary::StaticClass, TEXT("UVRUMGPluginBPLibrary"), false, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UVRUMGPluginBPLibrary);
	UFunction* Z_Construct_UFunction_UVRWidgetComponent_EmulateActivateKeyDown()
	{
		struct VRWidgetComponent_eventEmulateActivateKeyDown_Parms
		{
			FHitResult Hit;
		};
		UObject* Outer=Z_Construct_UClass_UVRWidgetComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EmulateActivateKeyDown"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(VRWidgetComponent_eventEmulateActivateKeyDown_Parms));
			UProperty* NewProp_Hit = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Hit"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Hit, VRWidgetComponent_eventEmulateActivateKeyDown_Parms), 0x0010008000000080, Z_Construct_UScriptStruct_FHitResult());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VR Widget"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VRWidgetComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Emulates an 'enter' key down event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVRWidgetComponent_EmulateActivateKeyUp()
	{
		struct VRWidgetComponent_eventEmulateActivateKeyUp_Parms
		{
			FHitResult Hit;
		};
		UObject* Outer=Z_Construct_UClass_UVRWidgetComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EmulateActivateKeyUp"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(VRWidgetComponent_eventEmulateActivateKeyUp_Parms));
			UProperty* NewProp_Hit = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Hit"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Hit, VRWidgetComponent_eventEmulateActivateKeyUp_Parms), 0x0010008000000080, Z_Construct_UScriptStruct_FHitResult());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VR Widget"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VRWidgetComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Emulates an 'enter' key up event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVRWidgetComponent_EmulateTouchDown()
	{
		struct VRWidgetComponent_eventEmulateTouchDown_Parms
		{
			FHitResult Hit;
			bool PressLeftMouseButton;
		};
		UObject* Outer=Z_Construct_UClass_UVRWidgetComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EmulateTouchDown"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(VRWidgetComponent_eventEmulateTouchDown_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(PressLeftMouseButton, VRWidgetComponent_eventEmulateTouchDown_Parms, bool);
			UProperty* NewProp_PressLeftMouseButton = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PressLeftMouseButton"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(PressLeftMouseButton, VRWidgetComponent_eventEmulateTouchDown_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(PressLeftMouseButton, VRWidgetComponent_eventEmulateTouchDown_Parms), sizeof(bool), true);
			UProperty* NewProp_Hit = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Hit"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Hit, VRWidgetComponent_eventEmulateTouchDown_Parms), 0x0010008000000080, Z_Construct_UScriptStruct_FHitResult());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VR Widget"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VRWidgetComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Emulates a touch press event for the given hit"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVRWidgetComponent_EmulateTouchMove()
	{
		struct VRWidgetComponent_eventEmulateTouchMove_Parms
		{
			FHitResult Hit;
			bool PressLeftMouseButton;
		};
		UObject* Outer=Z_Construct_UClass_UVRWidgetComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EmulateTouchMove"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(VRWidgetComponent_eventEmulateTouchMove_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(PressLeftMouseButton, VRWidgetComponent_eventEmulateTouchMove_Parms, bool);
			UProperty* NewProp_PressLeftMouseButton = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PressLeftMouseButton"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(PressLeftMouseButton, VRWidgetComponent_eventEmulateTouchMove_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(PressLeftMouseButton, VRWidgetComponent_eventEmulateTouchMove_Parms), sizeof(bool), true);
			UProperty* NewProp_Hit = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Hit"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Hit, VRWidgetComponent_eventEmulateTouchMove_Parms), 0x0010008000000080, Z_Construct_UScriptStruct_FHitResult());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VR Widget"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VRWidgetComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Emulates a touch move event for the given hit"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVRWidgetComponent_EmulateTouchUp()
	{
		struct VRWidgetComponent_eventEmulateTouchUp_Parms
		{
			FHitResult Hit;
			bool PressLeftMouseButton;
		};
		UObject* Outer=Z_Construct_UClass_UVRWidgetComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EmulateTouchUp"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(VRWidgetComponent_eventEmulateTouchUp_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(PressLeftMouseButton, VRWidgetComponent_eventEmulateTouchUp_Parms, bool);
			UProperty* NewProp_PressLeftMouseButton = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PressLeftMouseButton"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(PressLeftMouseButton, VRWidgetComponent_eventEmulateTouchUp_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(PressLeftMouseButton, VRWidgetComponent_eventEmulateTouchUp_Parms), sizeof(bool), true);
			UProperty* NewProp_Hit = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Hit"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Hit, VRWidgetComponent_eventEmulateTouchUp_Parms), 0x0010008000000080, Z_Construct_UScriptStruct_FHitResult());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VR Widget"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VRWidgetComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Emulates a touch release event for the given hit"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVRWidgetComponent_GetLocalHit()
	{
		struct VRWidgetComponent_eventGetLocalHit_Parms
		{
			FVector WorldHitLocation;
			FVector2D OutLocalHitLocation;
		};
		UObject* Outer=Z_Construct_UClass_UVRWidgetComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetLocalHit"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C20401, 65535, sizeof(VRWidgetComponent_eventGetLocalHit_Parms));
			UProperty* NewProp_OutLocalHitLocation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OutLocalHitLocation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(OutLocalHitLocation, VRWidgetComponent_eventGetLocalHit_Parms), 0x0010000000000180, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_WorldHitLocation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldHitLocation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(WorldHitLocation, VRWidgetComponent_eventGetLocalHit_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VR Widget"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VRWidgetComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Converts a world hit location to a local hit location"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVRWidgetComponent_SetCustomHit()
	{
		struct VRWidgetComponent_eventSetCustomHit_Parms
		{
			FHitResult Hit;
		};
		UObject* Outer=Z_Construct_UClass_UVRWidgetComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetCustomHit"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(VRWidgetComponent_eventSetCustomHit_Parms));
			UProperty* NewProp_Hit = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Hit"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Hit, VRWidgetComponent_eventSetCustomHit_Parms), 0x0010008000000080, Z_Construct_UScriptStruct_FHitResult());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VR Widget"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VRWidgetComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Tells the Widget to ignore mouse events and use this custom hit event"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UVRWidgetComponent_NoRegister()
	{
		return UVRWidgetComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UVRWidgetComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UWidgetComponent();
			Z_Construct_UPackage__Script_VRUMGPlugin();
			OuterClass = UVRWidgetComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A01080;

				OuterClass->LinkChild(Z_Construct_UFunction_UVRWidgetComponent_EmulateActivateKeyDown());
				OuterClass->LinkChild(Z_Construct_UFunction_UVRWidgetComponent_EmulateActivateKeyUp());
				OuterClass->LinkChild(Z_Construct_UFunction_UVRWidgetComponent_EmulateTouchDown());
				OuterClass->LinkChild(Z_Construct_UFunction_UVRWidgetComponent_EmulateTouchMove());
				OuterClass->LinkChild(Z_Construct_UFunction_UVRWidgetComponent_EmulateTouchUp());
				OuterClass->LinkChild(Z_Construct_UFunction_UVRWidgetComponent_GetLocalHit());
				OuterClass->LinkChild(Z_Construct_UFunction_UVRWidgetComponent_SetCustomHit());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVRWidgetComponent_EmulateActivateKeyDown(), "EmulateActivateKeyDown"); // 1737085391
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVRWidgetComponent_EmulateActivateKeyUp(), "EmulateActivateKeyUp"); // 3780829788
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVRWidgetComponent_EmulateTouchDown(), "EmulateTouchDown"); // 3625856051
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVRWidgetComponent_EmulateTouchMove(), "EmulateTouchMove"); // 1909099537
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVRWidgetComponent_EmulateTouchUp(), "EmulateTouchUp"); // 3063890956
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVRWidgetComponent_GetLocalHit(), "GetLocalHit"); // 2723873077
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVRWidgetComponent_SetCustomHit(), "SetCustomHit"); // 2706134199
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Activation Components|Activation Sockets Base Lighting LOD Mesh Mobility Trigger ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("VRWidgetComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/VRWidgetComponent.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UVRWidgetComponent(Z_Construct_UClass_UVRWidgetComponent, &UVRWidgetComponent::StaticClass, TEXT("UVRWidgetComponent"), false, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UVRWidgetComponent);
	UPackage* Z_Construct_UPackage__Script_VRUMGPlugin()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/VRUMGPlugin")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000080);
			FGuid Guid;
			Guid.A = 0x78F98419;
			Guid.B = 0xE6BC8CEA;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
